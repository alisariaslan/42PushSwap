==199040== Memcheck, a memory error detector
==199040== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==199040== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==199040== Command: ./a.out 4 67 3 87 23
==199040== Parent PID: 198985
==199040== 
==199040== Conditional jump or move depends on uninitialised value(s)
==199040==    at 0x109FAD: add_last (adder_deller.c:88)
==199040==    by 0x10935D: list_ra (rx.c:25)
==199040==    by 0x10A09C: sort_phase_one (amel_sort.c:56)
==199040==    by 0x10A09C: amel_sort (amel_sort.c:76)
==199040==    by 0x10925C: main (push_swap.c:41)
==199040== 
==199040== Conditional jump or move depends on uninitialised value(s)
==199040==    at 0x109F64: add_first (adder_deller.c:69)
==199040==    by 0x1094AC: list_pb (px.c:23)
==199040==    by 0x10A090: sort_phase_one (amel_sort.c:59)
==199040==    by 0x10A090: amel_sort (amel_sort.c:76)
==199040==    by 0x10925C: main (push_swap.c:41)
==199040== 
==199040== Conditional jump or move depends on uninitialised value(s)
==199040==    at 0x109E9F: stack_counter (counter.c:51)
==199040==    by 0x10A033: amel_sort (amel_sort.c:73)
==199040==    by 0x10925C: main (push_swap.c:41)
==199040== 
==199040== Conditional jump or move depends on uninitialised value(s)
==199040==    at 0x1096FA: shift_min (shifter.c:25)
==199040==    by 0x10A072: sort_phase_one (amel_sort.c:48)
==199040==    by 0x10A072: amel_sort (amel_sort.c:76)
==199040==    by 0x10925C: main (push_swap.c:41)
==199040== 
==199040== Conditional jump or move depends on uninitialised value(s)
==199040==    at 0x109E9F: stack_counter (counter.c:51)
==199040==    by 0x10970C: shift_min (shifter.c:35)
==199040==    by 0x10A072: sort_phase_one (amel_sort.c:48)
==199040==    by 0x10A072: amel_sort (amel_sort.c:76)
==199040==    by 0x10925C: main (push_swap.c:41)
==199040== 
==199040== Conditional jump or move depends on uninitialised value(s)
==199040==    at 0x109FE2: get_last (adder_deller.c:112)
==199040==    by 0x1093F4: list_rra (rrx.c:23)
==199040==    by 0x10A080: sort_phase_one (amel_sort.c:51)
==199040==    by 0x10A080: amel_sort (amel_sort.c:76)
==199040==    by 0x10925C: main (push_swap.c:41)
==199040== 
==199040== Conditional jump or move depends on uninitialised value(s)
==199040==    at 0x109E9F: stack_counter (counter.c:51)
==199040==    by 0x109F03: del_last (adder_deller.c:44)
==199040==    by 0x1093FE: list_rra (rrx.c:24)
==199040==    by 0x10A080: sort_phase_one (amel_sort.c:51)
==199040==    by 0x10A080: amel_sort (amel_sort.c:76)
==199040==    by 0x10925C: main (push_swap.c:41)
==199040== 
==199040== Conditional jump or move depends on uninitialised value(s)
==199040==    at 0x109F1B: del_last (adder_deller.c:47)
==199040==    by 0x1093FE: list_rra (rrx.c:24)
==199040==    by 0x10A080: sort_phase_one (amel_sort.c:51)
==199040==    by 0x10A080: amel_sort (amel_sort.c:76)
==199040==    by 0x10925C: main (push_swap.c:41)
==199040== 
==199040== Conditional jump or move depends on uninitialised value(s)
==199040==    at 0x109E9F: stack_counter (counter.c:51)
==199040==    by 0x10A0AB: amel_sort (amel_sort.c:78)
==199040==    by 0x10925C: main (push_swap.c:41)
==199040== 
==199040== Conditional jump or move depends on uninitialised value(s)
==199040==    at 0x109EC0: del_first (adder_deller.c:21)
==199040==    by 0x1094E4: list_pa (px.c:36)
==199040==    by 0x10A0C1: sort_phase_two (amel_sort.c:65)
==199040==    by 0x10A0C1: amel_sort (amel_sort.c:81)
==199040==    by 0x10925C: main (push_swap.c:41)
==199040== 
==199040== 
==199040== HEAP SUMMARY:
==199040==     in use at exit: 0 bytes in 0 blocks
==199040==   total heap usage: 13 allocs, 13 frees, 208 bytes allocated
==199040== 
==199040== All heap blocks were freed -- no leaks are possible
==199040== 
==199040== Use --track-origins=yes to see where uninitialised values come from
==199040== For lists of detected and suppressed errors, rerun with: -s
==199040== ERROR SUMMARY: 12 errors from 10 contexts (suppressed: 0 from 0)
